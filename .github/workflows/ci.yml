name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:
#  linter:
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout Code Repository
#        uses: actions/checkout@v4
#
#      - name: Set up Python 3.9
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9
#
#      # Run all pre-commit hooks on all the files.
#      # Getting only staged files can be tricky in case a new PR is opened
#      # since the action is run on a branch in detached head state
#      - name: Install and Run Pre-commit
#        uses: pre-commit/action@v2.0.0
#
#  # With no caching at all the entire ci process takes 4m 30s to complete!
#  pytest:
#    runs-on: ubuntu-latest
#
#    steps:
#
#      - name: Checkout Code Repository
#        uses: actions/checkout@v4
#
#      - name: Build the Stack
#        run:  docker-compose -f local.yml build
#
#      - name: Run DB Migrations
#        run:  docker-compose -f local.yml run --rm django python manage.py migrate
#
#      - name: Run Django Tests
#        run:  docker-compose -f local.yml run django pytest
#
#      - name: Tear down the Stack
#        run:  docker-compose -f local.yml down
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to github registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ihfazhillah
          password: ${{ secrets.DOCKER_PAT }}
      - name: Create production envs
        run: |
          mkdir -p .envs/.production
          echo ${{ secrets.DOT_DJANGO }} | base64 --decode > .envs/.production/.django
          echo ${{ secrets.DOT_PSQL }} | base64 --decode > .envs/.production/.postgres

      - name: Build the containers
        run:  |
          docker-compose -f "production.yml" build
          docker-compose -f "production.yml" push --ignore-push-failures

      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: ".envs/.production/*,production.yml,scripts/*"
          target: "/home/ihfazh/palugada"
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          script: bash /home/ihfazh/palugada/scripts/deploy.sh
#        env:
#          SERVER: ${{ secrets.USERNAME }}@${{ secrets.HOST }}
#        run: |
#          apt install scp
#          echo ${{ secrets.SSH_KEY }} > secret
#          scp -r .envs $SERVER:/home/ihfazh/palugada
#          scp production.yml $SERVER:/home/ihfazh/palugada
#
